Feature: Phase End project

Scenario: Star health home page test

Given User open the chrome browser and starhealth application
When User  waits for the Welcome to Star Health pop-up and closes it
Then  validates the Star Health home page title using a JUnit assertion 
Then  clicks on the Buy Now button 
And User enters following details
| URL | FullName | PhNo | PIN | OptionPlan |
| admin | admin@123 | 353453 | 12345 | plan1 |
| maya | admin@123 | 53564 | 12356 | plan2 |
And  User clicks on I need health insurance from the drop-down menu and select plan
Then  User click on the Plan for My Family page 
And Validate the user mobile number
And User clicks on the Star Health logo 
And Close all the browsers
===============================================================================
package steps;


	import java.util.List;
	import java.util.Map;

	import org.openqa.selenium.By;

	import io.cucumber.datatable.DataTable;
	import io.cucumber.java.en.Given;
	import io.cucumber.java.en.Then;
	import io.cucumber.java.en.When;

	public class StartHealthPage {
		

	@Given("User open the chrome browser and starhealth application")
	public void user_open_the_chrome_browser_and_starhealth_application() {
	    // Write code here that turns the phrase above into concrete actions
	    throw new io.cucumber.java.PendingException();
	}

	@When("User  waits for the Welcome to Star Health pop-up and closes it")
	public void user_waits_for_the_welcome_to_star_health_pop_up_and_closes_it() {
	    // Write code here that turns the phrase above into concrete actions
	    throw new io.cucumber.java.PendingException();
	}

	@Then("validates the Star Health home page title using a JUnit assertion")
	public void validates_the_star_health_home_page_title_using_a_j_unit_assertion() {
	    // Write code here that turns the phrase above into concrete actions
	    throw new io.cucumber.java.PendingException();
	}

	@Then("clicks on the Buy Now button")
	public void clicks_on_the_buy_now_button() {
	    // Write code here that turns the phrase above into concrete actions
	    throw new io.cucumber.java.PendingException();
	}

	@Then("User enters following details")
	public void user_enters_following_details(DataTable datatable) {
		
		// fetches the entire data table
				List<Map<String, String>> userList	= datatable.asMaps(String.class, String.class);
			// Now iterate over each row of the data table and get the value based on the columnname(key)
				
				//| URL | FullName | PhNo | PIN | OptionPlan |
				for(Map<String, String> e : userList) {
					// System.out.println(e);
					/*
					 * driver.findElement(By.xpath(
					 * "(//div[@class='cdx-text-input']/descendant::input[1])[1]")).clear();
					 * driver.findElement(By.xpath(
					 * "(//div[@class='cdx-text-input']/descendant::input[1])[1]"))
					 * .sendKeys(e.get("URL")); driver.findElement(By.xpath(
					 * "(//div[@class='cdx-text-input']/descendant::input[1])[2]")).clear();
					 * driver.findElement(By.xpath(
					 * "(//div[@class='cdx-text-input']/descendant::input[1])[2]"))
					 * .sendKeys(e.get("FullName")); driver.findElement(By.xpath(
					 * "(//div[@class='cdx-text-input']/descendant::input[1])[2]")).clear();
					 * driver.findElement(By.xpath(
					 * "(//div[@class='cdx-text-input']/descendant::input[1])[3]"))
					 * .sendKeys(e.get("PhNo")); driver.findElement(By.xpath(
					 * "(//div[@class='cdx-text-input']/descendant::input[1])[2]")).clear();
					 * driver.findElement(By.xpath(
					 * "(//div[@class='cdx-text-input']/descendant::input[1])[4]"))
					 * .sendKeys(e.get("PIN"));
					 * 
					 * driver.findElement(By.xpath(
					 * "(//div[@class='cdx-text-input']/descendant::input[1])[2]")).clear();
					 * driver.findElement(By.xpath(
					 * "(//div[@class='cdx-text-input']/descendant::input[1])[4]"))
					 * .sendKeys(e.get("OptionPlan"));
					 */
				}
				

	}

	@Then("User clicks on I need health insurance from the drop-down menu and select plan")
	public void user_clicks_on_i_need_health_insurance_from_the_drop_down_menu_and_select_plan() {
	    // Write code here that turns the phrase above into concrete actions
	    throw new io.cucumber.java.PendingException();
	}

	@Then("User click on the Plan for My Family page")
	public void user_click_on_the_plan_for_my_family_page() {
	    // Write code here that turns the phrase above into concrete actions
	    throw new io.cucumber.java.PendingException();
	}

	@Then("Validate the user mobile number")
	public void validate_the_user_mobile_number() {
	    // Write code here that turns the phrase above into concrete actions
	    throw new io.cucumber.java.PendingException();
	}

	@Then("User clicks on the Star Health logo")
	public void user_clicks_on_the_star_health_logo() {
	    // Write code here that turns the phrase above into concrete actions
	    throw new io.cucumber.java.PendingException();
	}

	@Then("Close all the browsers")
	public void close_all_the_browsers() {
	    // Write code here that turns the phrase above into concrete actions
	    throw new io.cucumber.java.PendingException();
	}

	}
===========================================================================================
package runner;

import org.junit.runner.RunWith;

import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;

@RunWith(Cucumber.class)
@CucumberOptions(features="C:\\Users\\Jayadeep\\eclipse-workspace\\Lesson5-CucumberDemo\\src\\test\\java\\features\\HookDemo.feature",
   				 glue= {"steps"},
				dryRun=false,
				plugin={"\"html:target/Cucumberreport.html",
						"pretty",
						"com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter:",
						"timeline:test-output-thread/"		
},
						
				//tags="@all" // all the scenarios of feature file will be executed
//				tags="@login" // only login will run
			     //   tags="@login and @logout"  // only scenarios having both the tags login and logout should run
			   //   tags = "@login or @logout"  
			    		// only scenarios having any of  the tags login or logout should run
			 //  tags = "not @logout" // avoid logout scenario and run the rest of the scenarios
			// tags = "@regression or @smoke or @functional" 
							 tags = "@login"
					// all scenarios with tag regression will run
			
			
		
		
		)


public class TestRunner {
	
	// A Cucumber runner file is used to build a communication between your feature files and step definition file
	// whenever we have to run multiple features or multiple steps, then we use Cucumber runner file
	// whenever have to generate reports as mentioned below, we will use Cucumber runner file
	/*  - cucumber reports
	    - Extend Reports
	    - Cucmber reprots in PDF format
	    - HTML reports
	    - TestNG reports */
	// Whenever we want to generate console output in a different format, a readable format we will use Cucumber runner file
	// If we have to set want to do below mentioned tasks , we use 
	// cucumber run options
	/*
	 * > set strict conditions for step mapping in feature file and step definition
	 * file, > execute few test steps > ignore or include few test stpes (tagging or
	 * groupping)
	 */
/* Various Cucumber options or properties:
 * features :comma separated paths to feature files. 
 * dryRun=true : it will check if every steps has an step defintion method implemented
 * When dryRun=true, it doesnot execute the cucumber step defintion file, it just matched and check every steps has a glued code
 * glue : comma separated package names of step defintion files
 * plugin = pretty : more details output and a more understanble format
 * Tags will come under plugin property, and they will be mentione din the runner file
 */
	
	
}

